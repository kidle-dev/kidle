name: snapshot
on:
  push:
    branches:
      - '**'        # matches every branch
    paths-ignore:
      - "README.md"
      - 'docs/**'

jobs:
  build-operator:
    runs-on: ubuntu-latest
    name: build-operator
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.17

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x

    - name: Cache
      uses: actions/cache@v2
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        # * Build cache (Mac)
        # * Build cache (Windows)
        path: |
          ~/go/pkg/mod
          ~/go/bin
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
      if: ${{ !env.ACT }}

    - uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true
      if: ${{ !env.ACT }}

    - name: Login to DockerHub
      uses: docker/login-action@v1
      if: ${{ !env.ACT }}
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Retrieve Docker Image Tags
      uses: jupyterhub/action-major-minor-tag-calculator@v1
      id: dockertags
      with:
        githubToken: ${{ secrets.GITHUB_TOKEN }}

    - name: "fmt & vet"
      run: |
        make WHAT=operator fmt vet

    - name: "Build and Push multi arch Operator Image"
      run: |
        TAG=${{env.GITHUB_REF_SLUG}} TAGS=${{ join(fromJson(steps.dockertags.outputs.tags)) }} make WHAT=operator build-multi-arch-image

  build-kidlectl:
    runs-on: ubuntu-latest
    name: build-kidlectl
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.17

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x

    - name: Cache
      uses: actions/cache@v2
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        # * Build cache (Mac)
        # * Build cache (Windows)
        path: |
          ~/go/pkg/mod
          ~/go/bin
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('cmd/kidlectl/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
      if: ${{ !env.ACT }}

    - uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true

    - name: Login to DockerHub
      uses: docker/login-action@v1
      if: ${{ !env.ACT }}
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: "fmt & vet"
      run: |
        make WHAT=kidlectl fmt vet

    - name: "Build and Push multi arch kidlectl Image"
      run: |
        TAG=${{env.GITHUB_REF_SLUG}} make WHAT=kidlectl build-multi-arch-image

  ginkgo-tests:
    runs-on: ubuntu-latest
    name: ginkgo tests
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.17

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Cache
      uses: actions/cache@v2
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        # * Build cache (Mac)
        # * Build cache (Windows)
        path: |
          ~/go/pkg/mod
          ~/go/bin
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
      if: ${{ !env.ACT }}

    - name: Run ginkgo tests
      run: make WHAT=operator gtest
      shell: bash

  golangci-lint:
    runs-on: ubuntu-latest
    name: golangci-lint
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.42.1
          args: --timeout=5m0s

  revive-lint:
    runs-on: ubuntu-latest
    name: revive-lint
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - uses: actions/checkout@v2
      - name: Run Revive Action by building from repository
        uses: morphy2k/revive-action@v2
