name: push
on:
  push:
    branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
#      - '!master'   # excludes master
    tags:
      - v*

jobs:
  build-operator:
    runs-on: ubuntu-latest
    name: build-operator
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Cache
      uses: actions/cache@v2
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        # * Build cache (Mac)
        # * Build cache (Windows)
        path: |
          ~/go/pkg/mod
          ~/go/bin
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true

    - name: Install kubebuilder
      uses: RyanSiu1995/kubebuilder-action@v1.1
      with:
        version: 2.3.1

    - name: Install ginkgo
      run: make ginkgo
      shell: bash
      working-directory: ./cmd/operator

    - name: Run ginkgo tests
      continue-on-error: true
      run: make WHAT=operator gtest
      shell: bash

    - name: Build code
      run: make WHAT=operator
      shell: bash

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: "Build and Push Operator Image"
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./cmd/operator/Dockerfile
        push: true
        tags: "kidle/kidle-operator:latest"

  build-kidlectl:
    runs-on: ubuntu-latest
    name: build-kidlectl
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Cache
      uses: actions/cache@v2
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        # * Build cache (Mac)
        # * Build cache (Windows)
        path: |
          ~/go/pkg/mod
          ~/go/bin
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('cmd/kidlectl/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true

    - name: Build code
      run: make WHAT=kidlectl
      shell: bash

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: "Build and Push kidlectl"
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./cmd/kidlectl/Dockerfile
        push: true
        tags: "kidle/kidlectl:latest"

  golangci:
    runs-on: ubuntu-latest
    name: lint
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
